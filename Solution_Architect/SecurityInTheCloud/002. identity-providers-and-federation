Identity Providers and Federation 

What is Federation?

Federation essentially means that we take our identity source and link it with AWS.
So we might have an identity source like an on premises Active Directory and we want to use that same
identity source for authenticating and getting authorized to have access to AWS.
So in other words, one username and password, one location where the user is stored along with their
credentials like a password or maybe multifactor authentication.
And then from that one identity source, we want to be able to access other systems without having to
re authenticate.

Federation links an external identity source (e.g., Active Directory, Google, or Facebook) with AWS.
Users authenticate once with their identity source and gain access to AWS resources without re-authenticating.
It enables single sign-on (SSO): One username and password to access multiple systems.

Types of Federation in AWS

1. SAML Federation (Security Assertion Markup Language)
Use Case: Federating with on-premises Active Directory or other identity providers that support SAML.
Flow:
Users authenticate with Active Directory.
Active Directory Federation Service (ADFS) generates a SAML assertion proving the user's identity.
The SAML assertion is sent to AWS Security Token Service (STS) via the AssumeRoleWithSAML API call.
STS issues temporary credentials.
These credentials allow access to AWS services (e.g., DynamoDB).
Example:
A user in Active Directory accesses an application that needs data from DynamoDB.
After authentication, STS issues credentials that enable the app to interact with DynamoDB.

2. Web Identity Federation
Use Case: Federating with social identity providers like Google, Apple, or Facebook.
Flow:
Users authenticate with a social IDP.
The app sends the authentication token to AWS STS using the AssumeRoleWithWebIdentity API call.
STS issues temporary credentials.
The app uses these credentials to access AWS services (e.g., DynamoDB).
Recommended Service: Use Amazon Cognito instead of direct Web Identity Federation.

3. AWS IAM Identity Center (Formerly AWS Single Sign-On)
Use Case: Centralized SSO for accessing AWS accounts, business applications, and custom applications.
Features:
Supports identity sources such as:
IAM Identity Center (built-in).
SAML 2.0 Identity Providers (e.g., Azure AD, on-premises Active Directory).
Integrates with AWS Organizations for account-wide SSO.
Flow:
Users authenticate with an identity source (e.g., Azure AD or on-premises AD via AD Connector).
Once authenticated, users are granted access to AWS accounts and services.

4. Amazon Cognito
Use Case: Web and mobile applications requiring user authentication.
Components:
Cognito User Pool:
Handles user authentication (via stored user accounts or social IDPs like Google, Facebook, Apple).
Returns a JSON Web Token (JWT) upon successful authentication.
Cognito Identity Pool:
Exchanges the JWT for temporary credentials using the AssumeRoleWithWebIdentity API call.
Flow:
Users authenticate via the Cognito User Pool or social IDPs.
The JWT is passed to the Cognito Identity Pool.
The JWT is exchanged for temporary credentials from AWS STS.
These credentials allow access to AWS services (e.g., DynamoDB).


Key AWS Services for Federation
Service	               Description
AWS STS	               Issues temporary security credentials for federated users or applications.
Active Directory	     Common on-premises identity source for storing user accounts and credentials.
ADFS	                 Identity provider for enabling federation with Active Directory.
IAM Identity Center	   AWS-managed SSO service for centralized access control.
Amazon Cognito	       Authentication and authorization service for web and mobile apps.


Recommendations for Use Cases

On-Premises AD with AWS:
Use SAML Federation with ADFS.
Integrate with AWS Managed Microsoft AD or AD Connector for seamless access to AWS.

Web/Mobile Applications:
Use Amazon Cognito for managing authentication via user pools and identity pools.

Centralized SSO:
Use IAM Identity Center for centralized identity management across AWS accounts and business apps.


API Calls for Federation
API Call	                 Use Case
AssumeRoleWithSAML	       SAML Federation (e.g., with ADFS).
AssumeRoleWithWebIdentity	 Web Identity Federation (e.g., with social IDPs).
AssumeRole	               Grant temporary credentials using IAM roles.


Comparison: Web Identity Federation vs. Cognito

Feature        	 Web Identity Federation	    Amazon Cognito
Authentication   Source	Social IDPs	           Social IDPs or Cognito User Pool
Token Type	     Social IDP token	             JWT from Cognito User Pool
Recommended Use	 Legacy implementations	       Modern web/mobile applications
