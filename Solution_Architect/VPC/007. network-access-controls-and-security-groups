


Network Access Control Lists (ACLs)


1. Level of Application: Applied at the subnet level.
2. Traffic Control: Filters inbound (ingress) and outbound (egress) traffic for the entire subnet.
3. Stateless: Rules for incoming traffic do not automatically apply to outgoing traffic.
You must define both inbound and outbound rules explicitly.
4. Rules: Each rule consists of:
Rule number (priority)
Protocol (e.g., TCP, UDP, ICMP)
Port range (if applicable)
Source or destination CIDR block
Allow or deny action
5. Default Behavior: By default, a new ACL denies all inbound and outbound traffic until rules are added.


Security Groups

1. Level of Application: Applied at the instance level (specifically at the network interface level).
2. Traffic Control: Filters traffic to and from individual EC2 instances, regardless of the subnet.
3. Stateful: If an inbound rule allows traffic, the return traffic is automatically allowed, even if there’s no corresponding outbound rule.
4. Rules: Each rule consists of:
Protocol (e.g., TCP, UDP, ICMP)
Port range (if applicable)
Source IP or CIDR block (for inbound rules)
Allow action only (cannot explicitly deny traffic; you can only allow traffic).
5. Default Behavior: By default, a new security group denies all inbound traffic and allows all outbound traffic.


Key Differences
Scope:
ACLs apply to subnets, affecting all instances within the subnet.
Security groups apply to specific instances or network interfaces.

State Management:
ACLs are stateless (must define rules for both directions).
Security groups are stateful (allow return traffic automatically).

Example Scenario
>Client-Server Interaction:

A client connects to a web server on port 80.
Traffic is evaluated by the firewall (network ACL or security group).
For security groups, if traffic is allowed in one direction, the return traffic is allowed automatically.
For network ACLs, both inbound and outbound rules must explicitly allow the traffic.

Conclusion

Understanding the differences between Network ACLs and Security Groups is crucial for managing traffic effectively
in your AWS environment. Each has its use cases, and knowing when to use one over the other can enhance 
security and functionality in your VPC.





High Numbered Ports

Definition: Ports above 1024 are called high numbered ports, commonly used for
dynamic assignment during client-server communication.

Source Port: Typically, a random high numbered port is assigned for the client (e.g., 65188).

Destination Port: For web services, the destination port is often 80 (HTTP) or 443 (HTTPS).


Firewall Rules

Inbound Traffic: 

To allow inbound HTTP traffic from a client IP (e.g., 10.1.1.1) to a web server
IP (e.g., 10.2.1.10), configure the firewall with:

Source IP: Client's IP (or any for public access)
Destination IP: Web server's IP
Destination Port: 80 (or 443 for HTTPS)
Source Port: any (since it’s dynamically assigned)


Return Traffic:
For the return traffic:

Source IP: Web server's IP
Destination IP: Client's IP
Source Port: 80 (for web server)
Destination Port: Dynamic port (e.g., 65188)


Stateful vs. Stateless Firewalls

Stateful Firewalls (like Security Groups):
Automatically allow return traffic based on established connections.
Only need inbound rules to allow incoming traffic; return traffic is allowed by default.

Stateless Firewalls (like Network ACLs):
Require both inbound and outbound rules for connections.
Treat each traffic direction separately; an inbound rule must be created for incoming traffic, and an outbound rule must be created for outgoing traffic.


Security Group Overview

Configuration:
Supports only allow rules; there’s an implicit deny rule at the end.
Rules can specify source IPs, IP ranges, or other security group IDs.

Best Practice:
Define a security group for the public-facing load balancer allowing inbound traffic on port 80 from any source.
Specify outbound rules to allow traffic to the web front end and application layers based on their respective security group IDs.


Network ACL Overview

Configuration:
Can have both allow and deny rules.
Rules are processed in a numbered order; once a rule is matched (allow or deny), processing stops.

Best Practice:
Set up inbound rules to allow traffic while specifying explicit deny rules as necessary.
Ensure that the rule order reflects the intended traffic flow, as earlier rules can override later ones.


Practical Example
Setup:
Public Subnet: Hosts the load balancer and web servers.
Private Subnet: Hosts application servers.

Security Group Example:

Public Load Balancer: Inbound rule allowing traffic on port 80 from any, outbound rule allowing traffic to the web servers on port 80.
Web Server: Allows inbound traffic from the public load balancer and outbound traffic to the application servers on specific ports (e.g., 8080).
Application Layer: Only accepts traffic from the web servers, ensuring strict communication boundaries.









Security Groups


1. Purpose: Security groups act as virtual firewalls for your EC2 instances to control inbound and outbound traffic.

2. Configuring Security Groups:

Outbound Rules: Control the traffic leaving your instance. To restrict outbound access, remove or limit outbound rules.
Inbound Rules: Control incoming traffic. For web services, allow only HTTP (port 80) from trusted sources.
Use specific IP addresses or security groups for source.

Example: To allow HTTP from the public web, set the source to the public web security group's ID.

3. Best Practices:

Limit inbound traffic to only what is necessary (e.g., allow HTTP only from the public web security group).
Regularly review and update security group rules to ensure they align with your application needs.


4. Testing Access:

Use a browser or curl command to test access to your instance.
If you change your IP address (e.g., due to VPN), you may lose access until you update the security group rules.

5. Common Issues:

If you can't connect to an instance, verify the inbound and outbound rules of the associated security group.
Remember that security groups are stateful, meaning return traffic is automatically allowed if outbound traffic was initiated.


Network ACLs

1. Purpose: Network ACLs (Access Control Lists) provide an additional layer of security
at the subnet level, controlling inbound and outbound traffic.

2. Configuring Network ACLs:

Rule Processing Order: Rules are evaluated in numerical order. If an "allow" rule is encountered 
before a "deny" rule for a specific traffic type, the traffic is allowed.

Inbound Rules: Define the traffic allowed into the subnet.
Outbound Rules: Define the traffic allowed out of the subnet.

3. Best Practices:

Use deny rules to restrict access from specific IP addresses or ranges while allowing necessary traffic.
Ensure that your allow rules are set correctly to permit required traffic.

4. Testing Access:

After making changes to network ACLs, test access again (may take a moment to reflect changes).
Confirm the order of rules to ensure that deny rules are processed before allow rules.

5. Common Issues:

If changes to network ACLs don't seem to work, double-check the rule order and make sure that 
deny rules do not follow allow rules for the same traffic type.

Key Differences

Stateful (Security Groups): Return traffic is automatically allowed for outbound rules if the request was initiated.
Stateless (Network ACLs): Return traffic must be explicitly allowed by rules, requiring separate rules for inbound and outbound traffic.

Commands for Testing

To test connectivity to a private IP:
curl -s <private-ip>

Note on Connectivity Delays
Security group rule changes are applied immediately, while network ACL changes may take slightly longer to propagate.

