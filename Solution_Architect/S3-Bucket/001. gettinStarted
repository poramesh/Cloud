Amazon S3 and Object Storage


Amazon S3
Amazon Simple Storage Service (S3) is an object-based storage system offered by AWS that allows you to store any type of file
(videos, PDFs, images, audio, etc.) in the cloud. It is:

Highly scalable: Can store millions of objects.
Cost-effective: Optimized for storing large amounts of data cheaply.
Reliable: Designed for durability and availability, with features like versioning and data replication.

2. How Does Object Storage Work in S3?

Buckets:
A bucket is a container where objects are stored.
Buckets must have a unique name across all AWS accounts since they are accessible via public URLs.

Objects:
Objects are individual files stored in a bucket.

Each object has:
Key: The unique name of the object (e.g., mydocument.pdf).
Value: The actual data (contents of the file).
Metadata: Optional information associated with the object (e.g., creation date, file type).
Version ID: If versioning is enabled, each object version gets a unique identifier.


3. Accessing Objects in S3

Public URLs:

Objects are accessed via HTTPS URLs over the internet. These URLs contain:
Bucket Name: The name of the bucket.
Region: The AWS region where the bucket is located.
Key: The name of the object.

Key-Value Store:

S3 uses a key-value model where:
Key: Acts as the identifier (object name).
Value: Contains the file's data.



4. Working with S3 Objects Using REST API

S3 operates over the web using a REST API, which makes it easy for developers to integrate with applications. Common HTTP methods include:

PUT/POST: Upload objects to a bucket.
GET: Retrieve/download objects from a bucket.
DELETE: Remove objects from a bucket.
SELECT: Query objects directly (e.g., specific data from a CSV file).

For developers, AWS provides SDKs like Boto3 for Python, which simplify interaction with S3.


5. Private and Public Access

Public Access:
By default, S3 is accessed via the public internet.
This is useful for public-facing applications or when sharing data publicly.

Private Access (S3 Gateway Endpoint):
For secure private environments, you can use an S3 Gateway Endpoint.
Allows instances in private VPC subnets to connect to S3 without going through the public internet.


6. Key Features of S3

Versioning:
Track changes to objects and retain old versions.
Useful for backups and auditing.

Access Control:
Fine-grained permissions can be set at the bucket or object level using:
ACLs (Access Control Lists).
IAM Policies for user and role-based access.

Scalability:
Handles millions of objects with ease.
Automatically scales to accommodate data growth.
Durability and Availability:

S3 is designed for 99.999999999% durability, ensuring data is safe.
Data is replicated across multiple Availability Zones.



7. Comparison: File Storage vs Object Storage

Feature               File Storage	                              Object Storage
Structure	            Hierarchical (folders within folders).	    Flat namespace (uses keys).
Access	              Mounted to OS (e.g., as a drive letter).  	Access via REST API.
Connection	          Persistent connection.	                    Connection terminates after each request.
Example	              Amazon EFS (Elastic File System).          	Amazon S3.
Hierarchy Simulation	Native directory structure.                	Mimicked using prefixes in keys.
Use Case	            File sharing, OS-level integration.	        Cloud storage, scalable web applications.

___________________

A flat namespace in the context of object storage like Amazon S3 means that there is no inherent hierarchy or folder structure to organize objects. 
Instead, all objects (files) are stored at the same "level" and are identified solely by their keys (unique names).

Characteristics of a Flat Namespace

No Hierarchy:
Unlike file storage (e.g., your computer's directory system) where files are stored in folders within folders, object
storage does not organize data into nested directories.
All objects are stored in a single namespace, identified by their keys.

Key-Based Identification:
Each object has a unique key that acts as its "address."
Example:
Object key: images/profile.jpg
This is not a "folder structure"; the slashes (/) are part of the key name.

Mimicking Folders with Prefixes:
To make the flat namespace more human-readable, S3 allows you to use prefixes in keys to simulate a folder structure.
For example:
images/profile.jpg
documents/report.pdf
S3 doesn't actually store these as folders but interprets the key prefixes (images/, documents/) to display a logical grouping.

Scalability:
A flat namespace is highly scalable because it avoids the complexities of maintaining hierarchical metadata for nested directories.
_________________________


What Does "Mounted to OS" Mean?

Mounting:
"Mounting" is the process of making a storage system (like a network drive or external disk) accessible to an operating system.
Once mounted, the OS assigns the storage a specific location in the file system, such as a drive 
letter (C:\ or D:\) in Windows or a directory (/mnt/storage) in Linux.

Direct Integration:
After being mounted, the storage behaves like local storage.
Applications and users can navigate directories, save files, and perform other standard operations
without needing additional software or APIs.

Persistent Connection:
Once the storage is mounted, the connection is maintained as long as the system is running or until it is manually 
unmounted. You don't need to re-establish the connection each time you access the storage.


When a storage system is mounted to an Operating System (OS), it means the storage is integrated with the OS in such a way that it behaves like a local drive. 
The OS can directly interact with the storage, and users or applications can read, write, and manage files as if they were stored on the computer itself.

Hereâ€™s a detailed explanation:

What Does "Mounted to OS" Mean?
Mounting:

"Mounting" is the process of making a storage system (like a network drive or external disk) accessible to an operating system.
Once mounted, the OS assigns the storage a specific location in the file system, such as a drive letter (C:\ or D:\) in Windows or a directory (/mnt/storage) in Linux.
Direct Integration:

After being mounted, the storage behaves like local storage.
Applications and users can navigate directories, save files, and perform other standard operations without needing additional software or APIs.
Persistent Connection:

Once the storage is mounted, the connection is maintained as long as the system is running or until it is manually unmounted. You don't need to re-establish the connection each time you access the storage.

Examples of Mounted Storage

Local Drives:
Your internal hard disk (C:\ on Windows) is mounted by default when your computer starts.
External Drives:
USB drives or external hard drives are automatically mounted when connected.
Network File Systems:
Storage like Amazon EFS (Elastic File System) or shared drives in a corporate network is mounted over a network.
On Windows, a network file system might appear as Z:\ after being mounted._
_________________



Key Features of S3
Versioning: Tracks multiple versions of objects.
Access Control: Fine-grained permissions at the bucket and object levels.
VPC Integration: Use endpoints for secure private connections.
Programmatic Access: Ideal for applications needing scalable and automated storage.



8. Bucket Naming Rules

Bucket names must be globally unique.
Names are used in public URLs, which means they are visible on the internet.
Examples of valid names:
my-data-bucket.
customer-files-eu-west.


9. Security and Networking in S3

Public and Private Objects:
By default, objects in S3 are private.
You can make them public by adjusting bucket policies or object permissions.

Access from VPCs:
For secure access without using the internet, set up a VPC Endpoint to connect instances directly to S3.


10. Advantages of Object Storage with S3

Cost-Effective: Pay only for what you use.
Highly Available: No infrastructure to manage, with data accessible globally.
Programmatic Access: Perfect for applications that need scalable storage.
Rich Features: Versioning, lifecycle policies, and analytics.

________________________________________________________________________________________________________________________________________________________


Amazon S3 Storage Classes and Key Concepts

Amazon S3 offers multiple storage classes tailored for various use cases, balancing cost, durability, availability, and performance. Below is a 
breakdown of the key concepts and storage classes:

Durability:
Refers to the ability to protect against data loss or corruption.
Amazon S3 offers 11 nines of durability (99.999999999%).
This means:
If you store 10 million objects, you might lose 1 object every 10,000 years.
Achieved by replicating data across multiple availability zones.

Availability:
Refers to the amount of time data is accessible.
Measured as a percentage of uptime per year (e.g., 99.99%).
This ensures your data is retrievable when needed but varies between storage classes.

Key Characteristics of Storage Classes:
Cost: Varies based on availability, access patterns, and data retrieval charges.
Performance: Measured by first-byte latency.
Availability Zones: Number of zones used for redundancy.

  
  
Amazon S3 Storage Classes

General Purpose (High Access Data):

1. S3 Standard:

Designed for frequently accessed data.
Availability: 99.99%.
Use Case: Websites, mobile applications, and data lakes.
Cost: Highest among storage classes.

2. S3 Intelligent-Tiering:

Automatically moves data between tiers (frequent or infrequent) based on access patterns.
Availability: 99.99%.
Use Case: Dynamic data with unpredictable access patterns.
Cost: Lower than S3 Standard when data becomes infrequently accessed.

3. S3 Standard-IA (Infrequent Access):

For less frequently accessed but still needed data.
Availability: 99.99%.
Cost: Lower storage cost but retrieval fees apply.
Use Case: Backups, disaster recovery.

4. S3 One Zone-IA:

Data stored in a single availability zone.
Availability: 99.5%.
Cost: Lower than Standard-IA.
Use Case: Secondary backups or easily replaceable data.


Archive Storage (Long-Term, Low-Frequency Access):
  
5. S3 Glacier Instant Retrieval:
For archival data with occasional immediate access.
First-byte Latency: Milliseconds.
Minimum Storage Duration: 90 days.
Cost: Higher than Deep Archive but lower than IA classes.
Use Case: Medical records, media archives.

6. S3 Glacier Flexible Retrieval:
For archival data with less frequent but faster retrieval needs.
Retrieval Time: Minutes to hours.
Cost: Lower than Instant Retrieval.
Use Case: Compliance documents.

7. S3 Glacier Deep Archive:

For data rarely accessed and stored for long durations.
Retrieval Time: Hours.
Minimum Storage Duration: 180 days.
Cost: Lowest storage cost in S3.
Use Case: Legal or compliance records, historical backups.

Comparison of Storage Classes
  
Storage Class      	            Durability	     Availability	      First-Byte Latency	  Minimum Storage   Duration	Use Case
S3 Standard	                    99.999999999%	   99.99%           	Milliseconds	        None	            Frequently accessed data
S3 Intelligent-Tiering         	99.999999999%	   99.99%	            Milliseconds	        None	            Dynamic access patterns
S3 Standard-IA	                99.999999999%	   99.99%	            Milliseconds	        30 days	          Infrequently accessed data
S3 One Zone-IA	                99.999999999%	   99.5%	            Milliseconds	        30 days	          Secondary backups, replaceable data
S3 Glacier Instant Retrieval	  99.999999999%	   99.99%           	Milliseconds	        90 days	          Archival with occasional quick access
S3 Glacier Flexible Retrieval	  99.999999999%	   99.99%	            Minutes to hrs        90 days	          Archival with flexible retrieval time
S3 Glacier Deep Archive	        99.999999999%	   99.99%	            Hours	                180 days	         Long-term archival with rare access

  
  
Important Considerations

Cost Trade-offs:
Lower availability or longer retrieval times reduce costs.
Some classes have minimum object sizes and durations, affecting cost.

Access Latency:
Frequently accessed data benefits from low-latency classes like Standard or Intelligent-Tiering.
Rarely accessed data benefits from archive classes like Glacier.

Availability Zones:
Standard classes use 3 zones for redundancy.
One Zone-IA uses only 1 zone, making it less resilient.

Compliance and Retention:
Glacier Deep Archive is ideal for long-term retention required by compliance policies.



Storage Class                      	Examples of Data Stored
S3 Standard	                      Website files, app data, real-time analytics datasets.
S3 Intelligent-Tiering	          E-commerce catalogs, dynamic user content, app logs.
S3 Standard-IA	                  Backup files, media for rare use, historical records.
S3 One Zone-IA	                  Non-critical backups, replaceable logs, temp data.
S3 Glacier Instant Retrieval	    Legal documents, medical imaging, historical sales.
S3 Glacier Flexible Retrieval	    Surveillance footage, research data, archived reports.
S3 Glacier Deep Archive	          Compliance records, film reels, tax records.


  
E-commerce Product Catalog
Example Use Case: Amazon or Flipkart product listings.


Sample Structure:

Product ID	Name	Category	Price	Description	Image URL	Stock Status
101	        Wireless Keyboard	Electronics	$29.99	Compact Bluetooth keyboard	https://example.com/img101.jpg	In Stock
102	        Yoga Mat	Fitness	$19.99	Eco-friendly yoga mat	https://example.com/img102.jpg	Out of Stock

How It Looks in JSON:

  [
  {
    "ProductID": "101",
    "Name": "Wireless Keyboard",
    "Category": "Electronics",
    "Price": 29.99,
    "Description": "Compact Bluetooth keyboard",
    "ImageURL": "https://example.com/img101.jpg",
    "StockStatus": "In Stock"
  },
  {
    "ProductID": "102",
    "Name": "Yoga Mat",
    "Category": "Fitness",
    "Price": 19.99,
    "Description": "Eco-friendly yoga mat",
    "ImageURL": "https://example.com/img102.jpg",
    "StockStatus": "Out of Stock"
  }
]


Examples of Archived Videos

Event Recordings
Videos of past conferences, webinars, or live-streamed events.
Examples: Corporate town halls, keynote speeches.

Media Libraries
Historical footage for journalism or film production.
Examples: Old news broadcasts, behind-the-scenes film footage.

Compliance and Legal Footage
Videos retained for regulatory or legal purposes.
Examples: Security camera recordings, court proceedings.

Educational Content
Course materials or lectures no longer actively taught but kept for archival.
Examples: Legacy e-learning modules, older training sessions.

Personal Memories
Old personal or family videos stored digitally for preservation.
Examples: Wedding videos, childhood recordings.

Cultural or Historical Records
Videos documenting significant historical or cultural events.
Examples: Documentaries, heritage site recordings.











  HOL
